[build-system]
build-backend = "mesonpy"
requires = [
    "meson-python",
    "pybind11>=2.12.0,<4.0.0a0",
    "numpy>=2.0.0,<3.0.0a0",
    "wheel",
    "versioningit",
]

[project]
name = "pyamg"
dynamic = ["version"]
authors = [
    {name = "Nathan Bell"},
    {name = "Luke Olson", email = "luke.olson@gmail.com"},
    {name = "Jacob Schroder"},
    {name = "Ben Southworth"},
]
maintainers = [
    {name = "Luke Olson", email = "luke.olson@gmail.com"},
    {name = "Jacob Schroder"},
    {name = "Ben Southworth"},
]
description = "PyAMG: Algebraic Multigrid Solvers in Python"
readme = "README.md"
license = {text = "MIT License"}
keywords = ["algebraic multigrid", "AMG", "sparse matrix", "preconditioning"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: C++",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy",
    "scipy>=1.11.0"
]

[project.optional-dependencies]
build = [
    "meson-python",
    "meson",
    "ninja",
    "pybind11",
]
style = [
    "ruff",
]
test = [
    "pytest",
]

[project.urls]
Homepage = "https://github.com/pyamg/pyamg"
Documentation = "https://pyamg.readthedocs.io"
Repository = "https://github.com/pyamg/pyamg.git"
Issues = "https://github.com/pyamg/pyamg/issues"
Changelog = "https://github.com/pyamg/pyamg/blob/main/changelog.md"

[tool.versioningit.next-version]
method = "smallest"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}+{vcs}{rev}"
dirty = "{base_version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+{vcs}{rev}.d{build_date:%Y%m%d}"

[tool.ruff]
line-length = 92
indent-width = 4
preview = true
exclude = [
    "pyamg/version.py",
    "pyamg/amg_core/bindthem.py",
]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "B",    # flake8-bugbear
    "C",    # flake8-comprehensions
    "C4",   # flake8-commas
    "D",    # pydocstyle
    "E",    # pycodestyle
    "F",    # pyflakes
    "N",    # pep8-naming
    "NPY",  # numpy
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    "UP",   # pyupgrade
    "W",    # pycodestyle
    "Q",    # flake8-quotes
    "RUF",  # ruff
]
ignore = [
    "D203",    # one-blank-line-before-class
    "D213",    # multi-line-summary-second-line
    "E741",    # do not use variables named ‘l’, ‘O’, or ‘I’
    "E226",    # missing whitespace around arithmetic operator
    "E241",    # multiple spaces after ','
    "N806",    # variable in function should be lowercase
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0914", # too-many-locals
    "PLR0915", # too-many-statements
    "PLR0917", # too-many-positional
    "C901",    # complex-structure
    "PLR0911", # too-many-return-statements
    "PLR2004", # magic-value-comparison
    "PLR1702", # too-many-nested-blocks
    "PLW2901", # redefined-loop-name
    "PLR6201", # literal-membership 
    "B028",    # no-explicit-stacklevel
    "PLR6104", # non-augmented-assignment
    "NPY002",  # numpy-legacy-random
]

[tool.ruff.lint.per-file-ignores]
    "pyamg/gallery/tests/test_fem.py" = ["E201", "E202", "E203"]
    "test*.py" = ["N802", "N803", "D101", "D102", "D103", "E221", "PLC0415", "PLR6301",
                  "NPY002"]
    "**/tests/__init__.py" = ["D104"]
    "docs/logo/pyamg_logo.py" = ["PLR0916"]
    "pyamg/util/utils.py" = ["PLC2701"]
    "pyamg/amg_core/__init__.py" = ["RUF022"]

[tool.ruff.lint.pep8-naming]
ignore-names = [
    # matrix and set-like names
    "A", "M", "Dinv", "G", "S", "B", "T", "V", "E", "C", "R", "W", "F", "AggOp",
    "U", "Q", "BtBinv", "B_old", "BH", "scale_T", "Cnodes",
    "Cpt_params", "get_Cpt_params", "compute_P", "E2V",
    "compute_BtBinv", "Atilde", "Findex", "Cindex",
    "Bf", "P_I", "I_F", "rho_D_inv_A", "rho_block_D_inv_A",
    # well-known methods with acronyms
    "CF", "RS", "PMIS", "PMISc", "CLJP", "CLJPc", "CR", "MIS",
    "Cpts", "Fpts", "_CRsweep",
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.coverage.run]
branch = true
source = [
    "pyamg",
]
omit = [
    "*tests/*",
    "*__init__.py",
    "pyamg/amg_core/bindthem.py",
    "pyamg/gallery/demo.py",
]

[tool.pytest.ini_options]
addopts = [
    "--ignore=pyamg/amg_core/bindthem.py",
]
