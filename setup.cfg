[metadata]
name = pyamg
version = attr: pyamg.__version__
description = PyAMG: Algebraic Multigrid Solvers in Python
long_description = file: README.md
long_description_content_type = text/markdown
keywords = algebraic multigrid, AMG, sparse matrix, preconditioning
author= Nathan Bell, Luke Olson, and Jacob Schroder
author_email = luke.olson@gmail.com
maintainer = Luke Olson
maintainer_email = luke.olson@gmail.com
url = https://github.com/pyamg/pyamg
download_url = https://github.com/pyamg/pyamg/releases
license = MIT
license_filel = LICENSE.txt
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: C++
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Education
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Software Development :: Libraries :: Python Modules

[options]
zip_safe = False
include_package_data = False
packages = find:
platforms = any
python_requires = >=3.8
install_requires =
    numpy
    scipy>=1.8.0
tests_require =
    pytest>=2

[options.packages.find]
exclude =
    docs
    README-DEV.md

[options.package_data]
pyamg =
    gallery/example_data/*.mat
    gallery/mesh_data/*.npz

[pycodestyle]
ignore = E226
exclude = amg_core.py

[coverage:run]
branch = True

[coverage:report]
omit =
    *tests/*
    *__init__.py
    setup.py
    pyamg/version.py
    pyamg/amg_core/bindthem.py
    pyamg/gallery/demo.py

[flake8]
max-line-length = 92
target-version = ['py38']
exclude =
  pyamg/version.py
  pyamg/amg_core/bindthem.py
ignore =
  # do not use variables named ‘l’, ‘O’, or ‘I’
  E741,
  # missing whitespace around arithmetic operator
  E226,
  # multiple spaces after ','
  E241,
  # line break before binary operator
  W503,
  # variable in function should be lowercase
  N806,
per-file-ignores =
  pyamg/gallery/tests/test_fem.py: E201, E202, E203
  test*.py: N802, N803, D101, D102, D103
  **/tests/__init__.py: D104
ignore-names =
  # matrix and set-like names
  A, M, Dinv, G, S, B, T, V, E, C, R, W, F, AggOp
  U, Q, BtBinv, B_old, BH, scale_T, Cnodes
  Cpt_params, get_Cpt_params, compute_P
  E2V
  compute_BtBinv, Atilde, Findex, Cindex
  Bf, P_I, I_F, rho_D_inv_A, rho_block_D_inv_A,
  # well-known methods with acronyms
  CF, RS, PMIS, PMISc, CLJP, CLJPc, CR, MIS
  Cpts, Fpts
  _CRsweep

[pylint:MESSAGES CONTROL]
disable=invalid-name,too-many-lines,too-many-locals,too-many-branches,too-many-statements,too-many-arguments,too-few-public-methods,too-many-return-statements,too-few-public-methods,duplicate-code

[pylint:MASTER]
ignore-patterns=test_(.)*\.py,bindthem.py,version.py
ignore=tests,amg_core
